import os
import subprocess
import sys
import webbrowser
from dotenv import load_dotenv
import time

# Carregar vari√°veis de ambiente
load_dotenv()

def iniciar_aplicacao():
    print("\n===== INICIANDO APLICA√á√ÉO MULTASGO =====")
    
    # Verificar conex√£o com o banco de dados primeiro
    print("Verificando conex√£o com o banco de dados...")
    try:
        # Importar o m√≥dulo de teste de conex√£o
        import testar_conexao
        if not testar_conexao.testar_conexao():
            print("\n‚ùå N√£o foi poss√≠vel estabelecer conex√£o com o banco de dados.")
            print("Verifique as configura√ß√µes no arquivo .env e tente novamente.")
            return
    except ImportError:
        print("Aviso: M√≥dulo de teste de conex√£o n√£o encontrado. Pulando verifica√ß√£o.")
    
    # Configurar vari√°veis de ambiente
    os.environ["PORT"] = "8080"
    
    print("\nüöÄ Iniciando o servidor MultasGO...")
    print("URL: http://localhost:8080")
    print("Pressione CTRL+C para encerrar o servidor.")
    
    # Timer para abrir o navegador ap√≥s 2 segundos
    def abrir_navegador():
        time.sleep(2)
        webbrowser.open("http://localhost:8080")
    
    # Iniciar o thread para abrir o navegador
    import threading
    thread = threading.Thread(target=abrir_navegador)
    thread.daemon = True
    thread.start()
    
    # Iniciar o servidor
    try:
        subprocess.run([sys.executable, "-m", "app.main"], check=True)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Servidor encerrado pelo usu√°rio.")
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå Erro ao iniciar o servidor: {e}")
        print("Verifique os logs para mais detalhes.")

if __name__ == "__main__":
    iniciar_aplicacao()